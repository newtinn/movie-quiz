{"version":3,"sources":["Components/GuessActor/GAComponents/GAQuestionAnswered.js","Components/GuessActor/GAComponents/GAQuestionDetails.js","Components/GuessActor/GAComponents/GAContent.js","Components/GuessActor/GAComponents/GAQuestion.js","Components/GuessActor/GuessActor.js","Components/Home/movie.jpg","Components/Home/Home.js","Components/GuessMovie/GMComponents/GMQuestionAnswered.js","Components/GuessMovie/GMComponents/GMQuestionDetails.js","Components/GuessMovie/GMComponents/GMContent.js","Components/GuessMovie/GMComponents/GMQuestion.js","Components/GuessMovie/GuessMovie.js","Components/SixDegrees/SDComponents/SDQuestionAnswered.js","Components/SixDegrees/SDComponents/SDQuestionDetails.js","Components/SixDegrees/SDComponents/SDContent.js","Components/SixDegrees/SDComponents/SDQuestion.js","Components/SixDegrees/sixdegrees.js","App.js","reportWebVitals.js","index.js"],"names":["GAQuestionAnswered","props","nextRound","bind","resetGame","contentFadeOut","document","getElementById","className","this","correct","removeQuestion","newQuestion","nextQuestion","resetScore","animationIn","imageToLoad","cover","durationIn","id","src","alt","style","maxHeight","paddingBottom","class","color","score","answer","type","value","onClick","React","Component","GAQuestionDetails","fadeContentOut","question","paddingTop","sex","placeholder","checkAnswer","GAContent","state","answered","userAnswer","trim","toLowerCase","actor","increaseScore","setState","GAQuestion","_mounted","getQuestion","questionAvailable","currentQueue","a","queue","length","fetch","then","res","json","data","indexOf","actorID","newQueue","push","enqueue","catch","error","dequeue","console","log","gameOver","role","GuessActor","queueMaxSize","checkFull","checkEmpty","questionToAdd","shift","currentScore","controller","Home","fontSize","banner","padding","marginLeft","marginRight","href","GMQuestionAnswered","Spinner","GMQuestionDetails","actor1Cover","actor2Cover","genre","year","actor1","actor2","GMContent","movie","movieCover","GMQuestion","actor1ID","actor2ID","movieID","GuessMovie","SDQuestionAnswered","SDQuestionDetails","cover1","cover2","SDContent","answerCover","SDQuestion","SixDegrees","App","Navbar","bg","variant","expand","Toggle","Collapse","Nav","width","Link","textAlign","paddingLeft","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.78e59c06.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { HideUntilLoaded } from 'react-animation';\r\n\r\nclass GAQuestionAnswered extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nextRound = this.nextRound.bind(this);\r\n        this.resetGame = this.resetGame.bind(this);\r\n        this.contentFadeOut = this.contentFadeOut.bind(this);\r\n    }\r\n\r\n    contentFadeOut() {\r\n        document.getElementById(\"content\").className = \"fade-out\";\r\n        if (this.props.correct === true) {\r\n            this.nextRound();\r\n        }\r\n        if (this.props.correct === false) {\r\n            this.resetGame();\r\n        }\r\n    }\r\n\r\n    nextRound() {\r\n        this.props.removeQuestion();\r\n        this.props.newQuestion();\r\n        this.props.nextQuestion();\r\n    }\r\n\r\n    resetGame() {\r\n        this.props.resetScore();\r\n        this.props.removeQuestion();\r\n        this.props.nextQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        /*this.props.removeQuestion();\r\n        this.props.removeQuestion();\r\n        this.props.removeQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();*/\r\n    }\r\n\r\n    render() {\r\n        if (this.props.correct === true) {\r\n            return(\r\n                <>\r\n                    <HideUntilLoaded animationIn=\"fadeIn\" imageToLoad={this.props.cover} durationIn=\"1000\">\r\n                        <div id=\"content\">\r\n                            <img src={this.props.cover} alt='' style={{maxHeight: \"400px\", paddingBottom: \"10px\"}} class=\"img-fluid\" />\r\n                            <h2>Correct!</h2>\r\n                            <h2 style={{color: \"#27FB6B\"}}>Score: {this.props.score}</h2>\r\n                            <p>The answer was: {this.props.answer}.<br/>Click the button below to go to the next question. </p>\r\n                            <input type=\"submit\" value=\"Next Question\" class=\"btn btn-primary\" onClick={this.contentFadeOut} />\r\n                        </div>\r\n                    </HideUntilLoaded>\r\n                </>\r\n            );\r\n        }\r\n        if (this.props.correct === false) {\r\n            return(\r\n                <>\r\n                    <HideUntilLoaded animationIn=\"fadeIn\" imageToLoad={this.props.cover} durationIn=\"1000\">\r\n                        <div class=\"fade-in\" id=\"content\">\r\n                            <img src={this.props.cover} alt='' style={{maxHeight: \"400px\", paddingBottom: \"10px\"}} class=\"img-fluid\" />\r\n                            <h2>Incorrect!<br/>The answer was {this.props.answer}.</h2>\r\n                            <h2 style={{color: \"#FF5A5F\"}}>Score: {this.props.score}</h2>\r\n                            <p>To play again press the button below.</p>\r\n                            <input type=\"submit\" value=\"Restart\" class=\"btn btn-danger\" onClick={this.contentFadeOut} />\r\n                        </div>\r\n                    </HideUntilLoaded>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default GAQuestionAnswered;","import React from 'react';\r\n\r\nimport { HideUntilLoaded } from 'react-animation'\r\n\r\nclass GAQuestionDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fadeContentOut = this.fadeContentOut.bind(this);\r\n    }\r\n\r\n    fadeContentOut() {\r\n        document.getElementById(\"content\").className = \"fade-out\";\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <HideUntilLoaded animationIn=\"fadeInUp\" durationIn=\"10000\" imageToLoad={this.props.question.cover}>\r\n                    <div id=\"content\">\r\n                        <img src={this.props.question.cover} alt='' style={{maxHeight: \"400px\"}} class=\"img-fluid\" />\r\n                        <h1 style={{paddingTop: \"15px\"}}>Who is this {this.props.question.sex}?</h1>\r\n                        <input type=\"text\" id=\"userAnswer\" className=\"text-line\" placeholder=\"Type your answer here...\" />\r\n                        <br/><br/><input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" onClick={this.fadeContentOut && this.props.checkAnswer} />\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <p></p>\r\n                    </div>\r\n                </HideUntilLoaded>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GAQuestionDetails;","import React from 'react';\r\n\r\nimport GAQuestionAnswered from './GAQuestionAnswered';\r\nimport GAQuestionDetails from './GAQuestionDetails';\r\n\r\nclass GAContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { answered: false, correct: null };\r\n        this.checkAnswer = this.checkAnswer.bind(this);\r\n        this.nextQuestion = this.nextQuestion.bind(this);\r\n    }\r\n\r\n    checkAnswer() {\r\n        var userAnswer = document.getElementById(\"userAnswer\").value;\r\n        userAnswer = userAnswer.trim();\r\n        if (userAnswer.toLowerCase() === this.props.question.actor.toLowerCase()) {\r\n            this.props.increaseScore();\r\n            this.setState({correct: true});\r\n        } else {\r\n            this.setState({correct: false});\r\n        }\r\n        this.setState({answered: true});\r\n    }\r\n\r\n    nextQuestion() {\r\n        this.setState({ answered: false, correct: null});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n               \r\n                {this.state.answered ? \r\n                    <GAQuestionAnswered \r\n                        correct={this.state.correct} \r\n                        answer={this.props.question.actor} \r\n                        newQuestion={this.props.newQuestion} \r\n                        removeQuestion={this.props.removeQuestion}\r\n                        resetScore={this.props.resetScore}\r\n                        nextQuestion={this.nextQuestion}\r\n                        score={this.props.score}\r\n                        cover={this.props.question.cover}\r\n                        answered={this.state.answered} /> : \r\n                    <GAQuestionDetails question={this.props.question} checkAnswer={this.checkAnswer} /> \r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GAContent;\r\n","import React from 'react';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nimport GAContent from './GAContent';\r\n\r\nclass GAQuestion extends React.Component {\r\n    _mounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getQuestion = this.getQuestion.bind(this);\r\n        this.removeQuestion = this.removeQuestion.bind(this);\r\n        this.state = { questionAvailable: false, currentQueue: [] };\r\n    }\r\n\r\n    // getting a question\r\n    async getQuestion() {\r\n        if (this.props.queue.length === 0) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n\r\n        await fetch('http://localhost:5000/getActorAPI').then(res => res.json()).then(data => {\r\n            if (this._mounted === true) {\r\n                var indexCheck = this.state.currentQueue.indexOf(data.actorID);\r\n                if (indexCheck === -1) {\r\n                    var newQueue = this.state.currentQueue;\r\n                    newQueue.push(data.actorID);\r\n                    this.setState({ currentQueue: newQueue} );\r\n                    this.props.enqueue(data);\r\n                    this.setState({ questionAvailable: true });\r\n                } else {\r\n                    this.getQuestion();\r\n                }\r\n            }\r\n        }).catch((error) => this.getQuestion());\r\n    }\r\n\r\n    removeQuestion() {\r\n        if (this.props.queue.length === 1) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n        this.props.dequeue();\r\n    }\r\n\r\n    componentDidMount() { // onload of the component\r\n        this._mounted = true;\r\n        if (this.props.queue.length === 0) {\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n        } else {\r\n            this.setState({ questionAvailable: true});\r\n        }\r\n        return () => this.setState({_mounted: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._mounted = false;\r\n        console.log(this._mounted);\r\n        console.log(\"changed page to home\");\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                {this.state.questionAvailable ? <GAContent \r\n                                                    question={this.props.queue[0]} \r\n                                                    gameOver={this.props.gameOver} \r\n                                                    increaseScore={this.props.increaseScore}\r\n                                                    resetScore={this.props.resetScore}\r\n                                                    removeQuestion={this.removeQuestion} \r\n                                                    newQuestion={this.getQuestion}\r\n                                                    score={this.props.score} /> \r\n                                                    : \r\n                                                    <div class=\"fade-in\">\r\n                                                        <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GAQuestion;","import React from 'react';\r\n\r\nimport GAQuestion from './GAComponents/GAQuestion';\r\n\r\nclass GuessActor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { queue: [] , queueMaxSize: 3, question: null, score: 0, gameOver: false };\r\n        this.enqueue = this.enqueue.bind(this);\r\n        this.dequeue = this.dequeue.bind(this);\r\n        this.checkFull = this.checkFull.bind(this);\r\n        this.checkEmpty = this.checkEmpty.bind(this);\r\n        this.increaseScore = this.increaseScore.bind(this);\r\n        this.resetScore = this.resetScore.bind(this);\r\n    }\r\n\r\n    // queue functions\r\n    enqueue(questionToAdd) {\r\n        if (this.checkFull() === false) {\r\n            var currentQueue = this.state.queue;\r\n            currentQueue.push(questionToAdd);\r\n            this.setState({ queue: currentQueue });\r\n            console.log(this.state.queue);\r\n        } else {\r\n            console.log(\"queue is full!\");\r\n        }\r\n    }\r\n    dequeue() {\r\n        if (this.checkEmpty() === false) {\r\n            var currentQueue = this.state.queue;\r\n            currentQueue.shift();\r\n            this.setState({ queue: currentQueue });\r\n            console.log(this.state.queue);\r\n        }\r\n    }\r\n    checkEmpty() {\r\n        if (this.state.queue.length === 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    checkFull() {\r\n        if (this.state.queue.length === this.state.queueMaxSize) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    increaseScore() {\r\n        var currentScore = this.state.score;\r\n        currentScore += 1;\r\n        this.setState({ score: currentScore});\r\n    }\r\n\r\n    resetScore() {\r\n        var currentScore = this.state.score;\r\n        currentScore = 0;\r\n        this.setState({ score: currentScore, gameOver: false});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"fade-in\">\r\n                <h1>Easy mode</h1>\r\n                <p>Guess the actor/actress</p>\r\n                <GAQuestion \r\n                    enqueue={this.enqueue} \r\n                    dequeue={this.dequeue} \r\n                    checkEmpty={this.checkEmpty} \r\n                    checkFull={this.checkFull} \r\n                    queue={this.state.queue} \r\n                    gameOver={this.state.gameOver} \r\n                    increaseScore={this.increaseScore}\r\n                    resetScore={this.resetScore}\r\n                    score={this.state.score} \r\n                    controller={this.controller} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuessActor;","export default __webpack_public_path__ + \"static/media/movie.10974783.jpg\";","import React from 'react';\r\n\r\nimport banner from './movie.jpg';\r\nclass Home extends React.Component {\r\n    render() {\r\n        return(\r\n            <>\r\n                <div className=\"fade-in\">\r\n                    <h1 style={{fontSize: \"72px\"}}>Home</h1>\r\n                    <img src={banner} style={{maxHeight: \"300px\", padding: \"15px\"}} className=\"img-fluid\" alt='' />\r\n                    <h4>Movie App</h4>\r\n                    <p>\r\n                        A movie quiz app that uses data from IMDb to create questions.\r\n                    </p>\r\n                        <h1 style={{paddingBottom: \"10px\"}}>Want to play?</h1>\r\n                        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\r\n                            <tr>\r\n                                <th>\r\n                                    <a href=\"/guessactor\"><input value=\"Easy\" type=\"submit\" className=\"btn btn-info\" style={{fontSize: \"24px\"}} /></a>\r\n                                </th>\r\n                                <th>\r\n                                    <a href=\"/guessmovie\"><input value=\"Medium\" type=\"submit\" className=\"btn btn-info\" style={{fontSize: \"24px\"}} /></a>\r\n                                </th>\r\n                                <th>\r\n                                    <a href=\"/sixdegrees\"><input value=\"Hard\" type=\"submit\" className=\"btn btn-info\" style={{fontSize: \"24px\"}} /></a>\r\n                                </th>\r\n                            </tr>\r\n                        </table>\r\n                        <p>\r\n                        <br/>There is information about how each gamemode works if you scroll down.\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <h1><u>Gamemodes</u></h1>\r\n                        </p>\r\n                        <h3>Easy</h3>\r\n                        <p>In this gamemode you will be given an image of an actor or actress and from that image<br/>you will have to guess who the actor/actress is.</p>\r\n                        <br/>\r\n                        <h3>Medium</h3>\r\n                        <p>In this gamemode you will be given an image of two actors/actresses and from those images<br/>you will have to guess what film both of them have been in.</p>\r\n                        <br/>\r\n                        <h3>Hard</h3>\r\n                        <p>In this gamemode you will be given an actor/actress and a film.\r\n                            <br/>From this actor/actress mentioned there will be another actor/actress they have done<br/>work with who has featured in the film mentioned in the question.\r\n                            <br/>Your task would be to find the actor/actress who is the link between the film and the actor/actress mentioned.</p>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nimport { AnimateOnChange, HideUntilLoaded } from 'react-animation';\r\n\r\nclass GMQuestionAnswered extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nextRound = this.nextRound.bind(this);\r\n        this.resetGame = this.resetGame.bind(this);\r\n        this.contentFadeOut = this.contentFadeOut.bind(this);\r\n    }\r\n\r\n    contentFadeOut() {\r\n        document.getElementById(\"content\").className = \"fade-out\";\r\n        if (this.props.correct === true) {\r\n            this.nextRound();\r\n        }\r\n        if (this.props.correct === false) {\r\n            this.resetGame();\r\n        }\r\n    }\r\n\r\n    nextRound() {\r\n        this.props.removeQuestion();\r\n        this.props.newQuestion();\r\n        this.props.nextQuestion();\r\n    }\r\n\r\n    resetGame() {\r\n        this.props.resetScore();\r\n        this.props.removeQuestion();\r\n        this.props.nextQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        /*this.props.removeQuestion();\r\n        this.props.removeQuestion();\r\n        this.props.removeQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();*/\r\n    }\r\n\r\n    render() {\r\n        if (this.props.correct === true) {\r\n            return(\r\n                <>\r\n                    <HideUntilLoaded animationIn=\"fadeInUp\" imageToLoad={this.props.cover} durationIn=\"1000\" Spinner={()=> \r\n                                                            \r\n                                                            <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                            </div>\r\n                                                        \r\n                                                            }>\r\n                        <div class=\"fade-in\" id=\"content\">\r\n                            <img src={this.props.cover} alt='' style={{maxHeight: \"400px\", paddingBottom: \"10px\"}} class=\"img-fluid\" />\r\n                            <h2>Correct!</h2>\r\n                            <h2 style={{color: \"#27FB6B\"}}>Score: {this.props.score}</h2>\r\n                            <p>The answer was: {this.props.answer}.<br/>Click the button below to go to the next question. </p>\r\n                            <input type=\"submit\" value=\"Next Question\" class=\"btn btn-primary\" onClick={this.contentFadeOut} />\r\n                        </div>\r\n                    </HideUntilLoaded>\r\n                </>\r\n            );\r\n        }\r\n        if (this.props.correct === false) {\r\n            return(\r\n                <>\r\n                    <HideUntilLoaded animationIn=\"fadeInUp\" imageToLoad={this.props.cover} durationIn=\"1000\" Spinner={()=> \r\n                                                            \r\n                                                            <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                            </div>\r\n                                                        \r\n                                                            }>\r\n                        <div class=\"fade-in\" id=\"content\">\r\n                            <img src={this.props.cover} alt='' style={{maxHeight: \"400px\", paddingBottom: \"10px\"}} class=\"img-fluid\" />\r\n                            <h2>Incorrect!<br/>The answer was {this.props.answer}.</h2>\r\n                            <h2 style={{color: \"#FF5A5F\"}}>Score: {this.props.score}</h2>\r\n                            <p>To play again press the button below.</p>\r\n                            <input type=\"submit\" value=\"Restart\" class=\"btn btn-danger\" onClick={this.contentFadeOut} />\r\n                        </div>\r\n                    </HideUntilLoaded>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default GMQuestionAnswered;","import React from 'react';\r\n\r\nimport { HideUntilLoaded } from 'react-animation'\r\n\r\nclass GMQuestionDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fadeContentOut = this.fadeContentOut.bind(this);\r\n    }\r\n\r\n    fadeContentOut() {\r\n        document.getElementById(\"content\").className = \"fade-out\";\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <HideUntilLoaded animationIn=\"fadeInUp\" durationIn=\"10000\" imageToLoad={this.props.question.actor1Cover && this.props.question.actor2Cover} >\r\n                    <div id=\"content\">\r\n                        <img src={this.props.question.actor1Cover} alt='' style={{maxHeight: \"400px\", padding:\"5px\"}} class=\"img-fluid\" />\r\n                        <img src={this.props.question.actor2Cover} alt='' style={{maxHeight: \"400px\", padding: \"5px\"}} class=\"img-fluid\" />\r\n                        <h3 style={{paddingTop: \"15px\"}}>What {this.props.question.genre} movie, released in {this.props.question.year},<br/>has both {this.props.question.actor1} and {this.props.question.actor2} been in?</h3>\r\n                        <input type=\"text\" id=\"userAnswer\" className=\"text-line\" placeholder=\"Type your answer here...\" />\r\n                        <br/><br/><input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" onClick={this.fadeContentOut && this.props.checkAnswer} />\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <p></p>\r\n                    </div>\r\n                </HideUntilLoaded>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GMQuestionDetails;","import React from 'react';\r\n\r\nimport GMQuestionAnswered from './GMQuestionAnswered';\r\nimport GMQuestionDetails from './GMQuestionDetails';\r\n\r\nclass GMContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { answered: false, correct: null };\r\n        this.checkAnswer = this.checkAnswer.bind(this);\r\n        this.nextQuestion = this.nextQuestion.bind(this);\r\n    }\r\n\r\n    checkAnswer() {\r\n        var userAnswer = document.getElementById(\"userAnswer\").value;\r\n        userAnswer = userAnswer.trim();\r\n        if (userAnswer.toLowerCase() === this.props.question.movie.toLowerCase()) {\r\n            this.props.increaseScore();\r\n            this.setState({correct: true});\r\n        } else {\r\n            this.setState({correct: false});\r\n        }\r\n        this.setState({answered: true});\r\n    }\r\n\r\n    nextQuestion() {\r\n        this.setState({ answered: false, correct: null});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n               \r\n                {this.state.answered ? \r\n                    <GMQuestionAnswered \r\n                        correct={this.state.correct} \r\n                        answer={this.props.question.movie} \r\n                        newQuestion={this.props.newQuestion} \r\n                        removeQuestion={this.props.removeQuestion}\r\n                        resetScore={this.props.resetScore}\r\n                        nextQuestion={this.nextQuestion}\r\n                        score={this.props.score}\r\n                        cover={this.props.question.movieCover}\r\n                        answered={this.state.answered} /> : \r\n                    <GMQuestionDetails question={this.props.question} checkAnswer={this.checkAnswer} /> \r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GMContent;\r\n","import React from 'react';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nimport GMContent from './GMContent';\r\n\r\nclass GMQuestion extends React.Component {\r\n    _mounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getQuestion = this.getQuestion.bind(this);\r\n        this.removeQuestion = this.removeQuestion.bind(this);\r\n        this.state = { questionAvailable: false, currentQueue: [] };\r\n    }\r\n\r\n    // getting a question\r\n    async getQuestion() {\r\n        if (this.props.queue.length === 0) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n\r\n        await fetch('http://localhost:5000/getMovieAPI').then(res => res.json()).then(data => {\r\n            if (this._mounted === true) {\r\n                var indexCheck = this.state.currentQueue.indexOf(data.actorID);\r\n\r\n                if (indexCheck === -1) {\r\n                    var newQueue = this.state.currentQueue;\r\n                    newQueue.push([data.actor1ID, data.actor2ID, data.movieID]); // actor1 ID, actor2 ID, movieID\r\n                    this.setState({ currentQueue: newQueue} );\r\n                    this.props.enqueue(data);\r\n                    this.setState({ questionAvailable: true });\r\n                } else {\r\n                    console.log(\"data already exists\");\r\n                    this.getQuestion();\r\n                }\r\n            }\r\n        }).catch((error) => this.getQuestion());\r\n    }\r\n\r\n    removeQuestion() {\r\n        if (this.props.queue.length === 1) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n        this.props.dequeue();\r\n    }\r\n\r\n    componentDidMount() { // onload of the component\r\n        this._mounted = true;\r\n        if (this.props.queue.length === 0) {\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n        } else {\r\n            this.setState({ questionAvailable: true});\r\n        }\r\n        return () => this.setState({_mounted: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._mounted = false;\r\n        console.log(this._mounted);\r\n        console.log(\"changed page to home\");\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                {this.state.questionAvailable ? <GMContent \r\n                                                    question={this.props.queue[0]} \r\n                                                    gameOver={this.props.gameOver} \r\n                                                    increaseScore={this.props.increaseScore}\r\n                                                    resetScore={this.props.resetScore}\r\n                                                    removeQuestion={this.removeQuestion} \r\n                                                    newQuestion={this.getQuestion}\r\n                                                    score={this.props.score} /> \r\n                                                    : \r\n                                                    <div class=\"fade-in\">\r\n                                                        <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GMQuestion;","import React from 'react';\r\n\r\nimport GMQuestion from './GMComponents/GMQuestion';\r\n\r\nclass GuessMovie extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { queue: [] , queueMaxSize: 3, question: null, score: 0, gameOver: false };\r\n        this.enqueue = this.enqueue.bind(this);\r\n        this.dequeue = this.dequeue.bind(this);\r\n        this.checkFull = this.checkFull.bind(this);\r\n        this.checkEmpty = this.checkEmpty.bind(this);\r\n        this.increaseScore = this.increaseScore.bind(this);\r\n        this.resetScore = this.resetScore.bind(this);\r\n    }\r\n\r\n    // queue functions\r\n    enqueue(questionToAdd) {\r\n        if (this.checkFull() === false) {\r\n            var currentQueue = this.state.queue;\r\n            currentQueue.push(questionToAdd);\r\n            this.setState({ queue: currentQueue });\r\n            console.log(this.state.queue);\r\n        } else {\r\n            console.log(\"queue is full!\");\r\n        }\r\n    }\r\n    dequeue() {\r\n        if (this.checkEmpty() === false) {\r\n            var currentQueue = this.state.queue;\r\n            currentQueue.shift();\r\n            this.setState({ queue: currentQueue });\r\n            console.log(this.state.queue);\r\n        }\r\n    }\r\n    checkEmpty() {\r\n        if (this.state.queue.length === 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    checkFull() {\r\n        if (this.state.queue.length === this.state.queueMaxSize) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    increaseScore() {\r\n        var currentScore = this.state.score;\r\n        currentScore += 1;\r\n        this.setState({ score: currentScore});\r\n    }\r\n\r\n    resetScore() {\r\n        var currentScore = this.state.score;\r\n        currentScore = 0;\r\n        this.setState({ score: currentScore, gameOver: false});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"fade-in\">\r\n                <h1>Medium mode</h1>\r\n                <p>Guess the movie that two actors/actresses have been in</p>\r\n                <GMQuestion \r\n                    enqueue={this.enqueue} \r\n                    dequeue={this.dequeue} \r\n                    checkEmpty={this.checkEmpty} \r\n                    checkFull={this.checkFull} \r\n                    queue={this.state.queue} \r\n                    gameOver={this.state.gameOver} \r\n                    increaseScore={this.increaseScore}\r\n                    resetScore={this.resetScore}\r\n                    score={this.state.score} \r\n                    controller={this.controller} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuessMovie;","import React from 'react';\r\n\r\nimport { HideUntilLoaded } from 'react-animation';\r\n\r\nclass SDQuestionAnswered extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nextRound = this.nextRound.bind(this);\r\n        this.resetGame = this.resetGame.bind(this);\r\n        this.contentFadeOut = this.contentFadeOut.bind(this);\r\n    }\r\n\r\n    contentFadeOut() {\r\n        document.getElementById(\"content\").className = \"fade-out\";\r\n        if (this.props.correct === true) {\r\n            this.nextRound();\r\n        }\r\n        if (this.props.correct === false) {\r\n            this.resetGame();\r\n        }\r\n    }\r\n\r\n    nextRound() {\r\n        this.props.removeQuestion();\r\n        this.props.newQuestion();\r\n        this.props.nextQuestion();\r\n    }\r\n\r\n    resetGame() {\r\n        this.props.resetScore();\r\n        this.props.removeQuestion();\r\n        this.props.nextQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        /*this.props.removeQuestion();\r\n        this.props.removeQuestion();\r\n        this.props.removeQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();*/\r\n    }\r\n\r\n    render() {\r\n        if (this.props.correct === true) {\r\n            return(\r\n                <>\r\n                    <HideUntilLoaded animationIn=\"fadeIn\" imageToLoad={this.props.cover} durationIn=\"1000\">\r\n                        <div id=\"content\">\r\n                            <img src={this.props.cover} alt='' style={{maxHeight: \"400px\", paddingBottom: \"10px\"}} class=\"img-fluid\" />\r\n                            <h2>Correct!</h2>\r\n                            <h2 style={{color: \"#27FB6B\"}}>Score: {this.props.score}</h2>\r\n                            <p>The answer was: {this.props.answer}.<br/>Click the button below to go to the next question. </p>\r\n                            <input type=\"submit\" value=\"Next Question\" class=\"btn btn-primary\" onClick={this.contentFadeOut} />\r\n                        </div>\r\n                    </HideUntilLoaded>\r\n                </>\r\n            );\r\n        }\r\n        if (this.props.correct === false) {\r\n            return(\r\n                <>\r\n                    <HideUntilLoaded animationIn=\"fadeIn\" imageToLoad={this.props.cover} durationIn=\"1000\">\r\n                        <div class=\"fade-in\" id=\"content\">\r\n                            <img src={this.props.cover} alt='' style={{maxHeight: \"400px\", paddingBottom: \"10px\"}} class=\"img-fluid\" />\r\n                            <h2>Incorrect!<br/>The answer was {this.props.answer}.</h2>\r\n                            <h2 style={{color: \"#FF5A5F\"}}>Score: {this.props.score}</h2>\r\n                            <p>To play again press the button below.</p>\r\n                            <input type=\"submit\" value=\"Restart\" class=\"btn btn-danger\" onClick={this.contentFadeOut} />\r\n                        </div>\r\n                    </HideUntilLoaded>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default SDQuestionAnswered;","import React from 'react';\r\n\r\nimport { HideUntilLoaded } from 'react-animation'\r\n\r\nclass SDQuestionDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fadeContentOut = this.fadeContentOut.bind(this);\r\n    }\r\n\r\n    fadeContentOut() {\r\n        document.getElementById(\"content\").className = \"fade-out\";\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <HideUntilLoaded animationIn=\"fadeInUp\" durationIn=\"10000\" imageToLoad={this.props.question.cover1 && this.props.question.cover2}>\r\n                    <div id=\"content\">\r\n                        <img src={this.props.question.cover1} alt='' style={{maxHeight: \"400px\", padding:\"5px\"}} class=\"img-fluid\" />\r\n                        <img src={this.props.question.cover2} alt='' style={{maxHeight: \"400px\", padding: \"5px\"}} class=\"img-fluid\" />\r\n                        <h3 style={{paddingTop: \"15px\"}}>{this.props.question.question}</h3>\r\n                        <input type=\"text\" id=\"userAnswer\" className=\"text-line\" placeholder=\"Type your answer here...\" />\r\n                        <br/><br/><input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" onClick={this.fadeContentOut && this.props.checkAnswer} />\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <p></p>\r\n                    </div>\r\n                </HideUntilLoaded>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SDQuestionDetails;","import React from 'react';\r\n\r\nimport SDQuestionAnswered from './SDQuestionAnswered';\r\nimport SDQuestionDetails from './SDQuestionDetails';\r\n\r\nclass SDContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { answered: false, correct: null };\r\n        this.checkAnswer = this.checkAnswer.bind(this);\r\n        this.nextQuestion = this.nextQuestion.bind(this);\r\n    }\r\n\r\n    checkAnswer() {\r\n        var userAnswer = document.getElementById(\"userAnswer\").value;\r\n        userAnswer = userAnswer.trim();\r\n        if (userAnswer.toLowerCase() === this.props.question.answer.toLowerCase()) {\r\n            this.props.increaseScore();\r\n            this.setState({correct: true});\r\n        } else {\r\n            this.setState({correct: false});\r\n        }\r\n        this.setState({answered: true});\r\n    }\r\n\r\n    nextQuestion() {\r\n        this.setState({ answered: false, correct: null});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n               \r\n                {this.state.answered ? \r\n                    <SDQuestionAnswered \r\n                        correct={this.state.correct} \r\n                        answer={this.props.question.answer} \r\n                        newQuestion={this.props.newQuestion} \r\n                        removeQuestion={this.props.removeQuestion}\r\n                        resetScore={this.props.resetScore}\r\n                        nextQuestion={this.nextQuestion}\r\n                        score={this.props.score}\r\n                        cover={this.props.question.answerCover}\r\n                        answered={this.state.answered} /> : \r\n                    <SDQuestionDetails question={this.props.question} checkAnswer={this.checkAnswer} /> \r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SDContent;\r\n","import React from 'react';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nimport SDContent from './SDContent';\r\n\r\nclass SDQuestion extends React.Component {\r\n    _mounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getQuestion = this.getQuestion.bind(this);\r\n        this.removeQuestion = this.removeQuestion.bind(this);\r\n        this.state = { questionAvailable: false, currentQueue: [] };\r\n    }\r\n\r\n    // getting a question\r\n    async getQuestion() {\r\n        if (this.props.queue.length === 0) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n\r\n        await fetch('http://localhost:5000/sixdegreesAPI').then(res => res.json()).then(data => {\r\n            if (this._mounted === true) {\r\n                var indexCheck = this.state.currentQueue.indexOf(data.answer);\r\n                if (indexCheck === -1) {\r\n                    var newQueue = this.state.currentQueue;\r\n                    newQueue.push(data.answer);\r\n                    this.setState({ currentQueue: newQueue} );\r\n                    this.props.enqueue(data);\r\n                    this.setState({ questionAvailable: true });\r\n                } else {\r\n                    this.getQuestion();\r\n                }\r\n            }\r\n        }).catch((error) => this.getQuestion());\r\n    }\r\n\r\n    removeQuestion() {\r\n        if (this.props.queue.length === 1) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n        this.props.dequeue();\r\n    }\r\n\r\n    componentDidMount() { // onload of the component\r\n        this._mounted = true;\r\n        if (this.props.queue.length === 0) {\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n        } else {\r\n            this.setState({ questionAvailable: true});\r\n        }\r\n        return () => this.setState({_mounted: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._mounted = false;\r\n        console.log(this._mounted);\r\n        console.log(\"changed page to home\");\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                {this.state.questionAvailable ? <SDContent \r\n                                                    question={this.props.queue[0]} \r\n                                                    gameOver={this.props.gameOver} \r\n                                                    increaseScore={this.props.increaseScore}\r\n                                                    resetScore={this.props.resetScore}\r\n                                                    removeQuestion={this.removeQuestion} \r\n                                                    newQuestion={this.getQuestion}\r\n                                                    score={this.props.score} /> \r\n                                                    : \r\n                                                    <div class=\"fade-in\">\r\n                                                        <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SDQuestion;","import React from 'react';\r\n\r\nimport SDQuestion from './SDComponents/SDQuestion';\r\n\r\nclass SixDegrees extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { queue: [] , queueMaxSize: 3, question: null, score: 0, gameOver: false };\r\n        this.enqueue = this.enqueue.bind(this);\r\n        this.dequeue = this.dequeue.bind(this);\r\n        this.checkFull = this.checkFull.bind(this);\r\n        this.checkEmpty = this.checkEmpty.bind(this);\r\n        this.increaseScore = this.increaseScore.bind(this);\r\n        this.resetScore = this.resetScore.bind(this);\r\n    }\r\n\r\n    // queue functions\r\n    enqueue(questionToAdd) {\r\n        if (this.checkFull() === false) {\r\n            var currentQueue = this.state.queue;\r\n            currentQueue.push(questionToAdd);\r\n            this.setState({ queue: currentQueue });\r\n            console.log(this.state.queue);\r\n        } else {\r\n            console.log(\"queue is full!\");\r\n        }\r\n    }\r\n    dequeue() {\r\n        if (this.checkEmpty() === false) {\r\n            var currentQueue = this.state.queue;\r\n            currentQueue.shift();\r\n            this.setState({ queue: currentQueue });\r\n            console.log(this.state.queue);\r\n        }\r\n    }\r\n    checkEmpty() {\r\n        if (this.state.queue.length === 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    checkFull() {\r\n        if (this.state.queue.length === this.state.queueMaxSize) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    increaseScore() {\r\n        var currentScore = this.state.score;\r\n        currentScore += 1;\r\n        this.setState({ score: currentScore});\r\n    }\r\n\r\n    resetScore() {\r\n        var currentScore = this.state.score;\r\n        currentScore = 0;\r\n        this.setState({ score: currentScore, gameOver: false});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"fade-in\">\r\n                <h1>Hard mode</h1>\r\n                <p>Six degrees of separation</p>\r\n                <SDQuestion \r\n                    enqueue={this.enqueue} \r\n                    dequeue={this.dequeue} \r\n                    checkEmpty={this.checkEmpty} \r\n                    checkFull={this.checkFull} \r\n                    queue={this.state.queue} \r\n                    gameOver={this.state.gameOver} \r\n                    increaseScore={this.increaseScore}\r\n                    resetScore={this.resetScore}\r\n                    score={this.state.score} \r\n                    controller={this.controller} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SixDegrees;","import React from 'react';\r\n\r\nimport GuessActor from './Components/GuessActor/GuessActor';\r\nimport Home from './Components/Home/Home';\r\nimport GuessMovie from './Components/GuessMovie/GuessMovie';\r\nimport SixDegrees from './Components/SixDegrees/sixdegrees';\r\n\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"transparent\" variant=\"dark\" expand=\"lg\">\r\n          <Navbar.Toggle />\r\n          <Navbar.Collapse>\r\n              <Nav className=\"justify-content-end\" style={{ width: \"100%\"}}>\r\n                <Nav.Link href=\"/\"><h1 style={{ padding: \"10px\", textAlign: \"left\"}}>Home</h1></Nav.Link>\r\n                <Nav.Link href=\"/\"><h1 style={{ padding: \"10px\", textAlign: \"left\"}}>About</h1></Nav.Link>\r\n                <Nav.Link href=\"/\"><h1 style={{ padding: \"10px\", textAlign: \"left\"}}>Contact</h1></Nav.Link>\r\n              </Nav>\r\n          </Navbar.Collapse>\r\n      </Navbar>\r\n\r\n      <div style={{paddingLeft: \"20px\"}}>\r\n        <Router>\r\n            <Switch>\r\n              <Route path=\"/guessactor\">\r\n                <GuessActor />\r\n              </Route>\r\n              <Route path=\"/guessmovie\">\r\n                <GuessMovie />\r\n              </Route>\r\n              <Route path=\"/sixdegrees\">\r\n                <SixDegrees />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Home />\r\n              </Route>\r\n            </Switch>\r\n        </Router>\r\n      </div>\r\n    </>\r\n\r\n    /* <div style={{paddingLeft: \"20px\"}}>\r\n      <Router>\r\n        <div>\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/guessactor\">Guess Actor</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n          { A <Switch> looks through its children <Route>s and\r\n              renders the first one that matches the current URL. }\r\n          <Switch>\r\n            <Route path=\"/guessactor\">\r\n              <GuessActor />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>*/\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}