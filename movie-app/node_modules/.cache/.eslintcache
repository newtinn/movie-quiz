[{"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\index.js":"1","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\App.js":"2","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\reportWebVitals.js":"3","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GuessActor.js":"4","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestion.js":"5","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAContent.js":"6","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestionAnswered.js":"7","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestionDetails.js":"8","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\Home\\Home.js":"9","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GuessMovie.js":"10","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMQuestion.js":"11","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMContent.js":"12","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMQuestionDetails.js":"13","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMQuestionAnswered.js":"14","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\sixdegrees.js":"15","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDQuestion.js":"16","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDContent.js":"17","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDQuestionDetails.js":"18","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDQuestionAnswered.js":"19"},{"size":517,"mtime":1623418120046,"results":"20","hashOfConfig":"21"},{"size":2316,"mtime":1624026462542,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1623418120055,"results":"23","hashOfConfig":"21"},{"size":2645,"mtime":1623941110637,"results":"24","hashOfConfig":"21"},{"size":3231,"mtime":1623941651957,"results":"25","hashOfConfig":"21"},{"size":1814,"mtime":1623853686685,"results":"26","hashOfConfig":"21"},{"size":3079,"mtime":1623942328513,"results":"27","hashOfConfig":"21"},{"size":1329,"mtime":1623963811460,"results":"28","hashOfConfig":"21"},{"size":3052,"mtime":1624029078709,"results":"29","hashOfConfig":"21"},{"size":2678,"mtime":1623858696372,"results":"30","hashOfConfig":"21"},{"size":3355,"mtime":1623941648937,"results":"31","hashOfConfig":"21"},{"size":1819,"mtime":1623859151783,"results":"32","hashOfConfig":"21"},{"size":1658,"mtime":1623951985677,"results":"33","hashOfConfig":"21"},{"size":3878,"mtime":1623942518901,"results":"34","hashOfConfig":"21"},{"size":2647,"mtime":1624026442925,"results":"35","hashOfConfig":"21"},{"size":3231,"mtime":1624025768234,"results":"36","hashOfConfig":"21"},{"size":1822,"mtime":1624026843898,"results":"37","hashOfConfig":"21"},{"size":1504,"mtime":1624026755237,"results":"38","hashOfConfig":"21"},{"size":3079,"mtime":1624026844877,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1n2t8n2",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\index.js",[],["82","83"],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\App.js",["84"],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\reportWebVitals.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GuessActor.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestion.js",["85"],"import React from 'react';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nimport GAContent from './GAContent';\r\n\r\nclass GAQuestion extends React.Component {\r\n    _mounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getQuestion = this.getQuestion.bind(this);\r\n        this.removeQuestion = this.removeQuestion.bind(this);\r\n        this.state = { questionAvailable: false, currentQueue: [] };\r\n    }\r\n\r\n    // getting a question\r\n    async getQuestion() {\r\n        if (this.props.queue.length === 0) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n\r\n        await fetch('http://localhost:5000/getActorAPI').then(res => res.json()).then(data => {\r\n            if (this._mounted === true) {\r\n                var indexCheck = this.state.currentQueue.indexOf(data.actorID);\r\n                if (indexCheck === -1) {\r\n                    var newQueue = this.state.currentQueue;\r\n                    newQueue.push(data.actorID);\r\n                    this.setState({ currentQueue: newQueue} );\r\n                    this.props.enqueue(data);\r\n                    this.setState({ questionAvailable: true });\r\n                } else {\r\n                    this.getQuestion();\r\n                }\r\n            }\r\n        }).catch((error) => this.getQuestion());\r\n    }\r\n\r\n    removeQuestion() {\r\n        if (this.props.queue.length === 1) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n        this.props.dequeue();\r\n    }\r\n\r\n    componentDidMount() { // onload of the component\r\n        this._mounted = true;\r\n        if (this.props.queue.length === 0) {\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n        } else {\r\n            this.setState({ questionAvailable: true});\r\n        }\r\n        return () => this.setState({_mounted: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._mounted = false;\r\n        console.log(this._mounted);\r\n        console.log(\"changed page to home\");\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                {this.state.questionAvailable ? <GAContent \r\n                                                    question={this.props.queue[0]} \r\n                                                    gameOver={this.props.gameOver} \r\n                                                    increaseScore={this.props.increaseScore}\r\n                                                    resetScore={this.props.resetScore}\r\n                                                    removeQuestion={this.removeQuestion} \r\n                                                    newQuestion={this.getQuestion}\r\n                                                    score={this.props.score} /> \r\n                                                    : \r\n                                                    <div class=\"fade-in\">\r\n                                                        <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GAQuestion;","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAContent.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestionAnswered.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestionDetails.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\Home\\Home.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GuessMovie.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMQuestion.js",["86"],"import React from 'react';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nimport GMContent from './GMContent';\r\n\r\nclass GMQuestion extends React.Component {\r\n    _mounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getQuestion = this.getQuestion.bind(this);\r\n        this.removeQuestion = this.removeQuestion.bind(this);\r\n        this.state = { questionAvailable: false, currentQueue: [] };\r\n    }\r\n\r\n    // getting a question\r\n    async getQuestion() {\r\n        if (this.props.queue.length === 0) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n\r\n        await fetch('http://localhost:5000/getMovieAPI').then(res => res.json()).then(data => {\r\n            if (this._mounted === true) {\r\n                var indexCheck = this.state.currentQueue.indexOf(data.actorID);\r\n\r\n                if (indexCheck === -1) {\r\n                    var newQueue = this.state.currentQueue;\r\n                    newQueue.push([data.actor1ID, data.actor2ID, data.movieID]); // actor1 ID, actor2 ID, movieID\r\n                    this.setState({ currentQueue: newQueue} );\r\n                    this.props.enqueue(data);\r\n                    this.setState({ questionAvailable: true });\r\n                } else {\r\n                    console.log(\"data already exists\");\r\n                    this.getQuestion();\r\n                }\r\n            }\r\n        }).catch((error) => this.getQuestion());\r\n    }\r\n\r\n    removeQuestion() {\r\n        if (this.props.queue.length === 1) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n        this.props.dequeue();\r\n    }\r\n\r\n    componentDidMount() { // onload of the component\r\n        this._mounted = true;\r\n        if (this.props.queue.length === 0) {\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n        } else {\r\n            this.setState({ questionAvailable: true});\r\n        }\r\n        return () => this.setState({_mounted: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._mounted = false;\r\n        console.log(this._mounted);\r\n        console.log(\"changed page to home\");\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                {this.state.questionAvailable ? <GMContent \r\n                                                    question={this.props.queue[0]} \r\n                                                    gameOver={this.props.gameOver} \r\n                                                    increaseScore={this.props.increaseScore}\r\n                                                    resetScore={this.props.resetScore}\r\n                                                    removeQuestion={this.removeQuestion} \r\n                                                    newQuestion={this.getQuestion}\r\n                                                    score={this.props.score} /> \r\n                                                    : \r\n                                                    <div class=\"fade-in\">\r\n                                                        <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GMQuestion;","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMContent.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMQuestionDetails.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMQuestionAnswered.js",["87"],"import React from 'react';\r\n\r\nimport { AnimateOnChange, HideUntilLoaded } from 'react-animation';\r\n\r\nclass GMQuestionAnswered extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nextRound = this.nextRound.bind(this);\r\n        this.resetGame = this.resetGame.bind(this);\r\n        this.contentFadeOut = this.contentFadeOut.bind(this);\r\n    }\r\n\r\n    contentFadeOut() {\r\n        document.getElementById(\"content\").className = \"fade-out\";\r\n        if (this.props.correct === true) {\r\n            this.nextRound();\r\n        }\r\n        if (this.props.correct === false) {\r\n            this.resetGame();\r\n        }\r\n    }\r\n\r\n    nextRound() {\r\n        this.props.removeQuestion();\r\n        this.props.newQuestion();\r\n        this.props.nextQuestion();\r\n    }\r\n\r\n    resetGame() {\r\n        this.props.resetScore();\r\n        this.props.removeQuestion();\r\n        this.props.nextQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        /*this.props.removeQuestion();\r\n        this.props.removeQuestion();\r\n        this.props.removeQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();*/\r\n    }\r\n\r\n    render() {\r\n        if (this.props.correct === true) {\r\n            return(\r\n                <>\r\n                    <HideUntilLoaded animationIn=\"fadeInUp\" imageToLoad={this.props.cover} durationIn=\"1000\" Spinner={()=> \r\n                                                            \r\n                                                            <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                            </div>\r\n                                                        \r\n                                                            }>\r\n                        <div class=\"fade-in\" id=\"content\">\r\n                            <img src={this.props.cover} alt='' style={{maxHeight: \"400px\", paddingBottom: \"10px\"}} class=\"img-fluid\" />\r\n                            <h2>Correct!</h2>\r\n                            <h2 style={{color: \"#27FB6B\"}}>Score: {this.props.score}</h2>\r\n                            <p>The answer was: {this.props.answer}.<br/>Click the button below to go to the next question. </p>\r\n                            <input type=\"submit\" value=\"Next Question\" class=\"btn btn-primary\" onClick={this.contentFadeOut} />\r\n                        </div>\r\n                    </HideUntilLoaded>\r\n                </>\r\n            );\r\n        }\r\n        if (this.props.correct === false) {\r\n            return(\r\n                <>\r\n                    <HideUntilLoaded animationIn=\"fadeInUp\" imageToLoad={this.props.cover} durationIn=\"1000\" Spinner={()=> \r\n                                                            \r\n                                                            <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                            </div>\r\n                                                        \r\n                                                            }>\r\n                        <div class=\"fade-in\" id=\"content\">\r\n                            <img src={this.props.cover} alt='' style={{maxHeight: \"400px\", paddingBottom: \"10px\"}} class=\"img-fluid\" />\r\n                            <h2>Incorrect!<br/>The answer was {this.props.answer}.</h2>\r\n                            <h2 style={{color: \"#FF5A5F\"}}>Score: {this.props.score}</h2>\r\n                            <p>To play again press the button below.</p>\r\n                            <input type=\"submit\" value=\"Restart\" class=\"btn btn-danger\" onClick={this.contentFadeOut} />\r\n                        </div>\r\n                    </HideUntilLoaded>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default GMQuestionAnswered;","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\sixdegrees.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDQuestion.js",["88"],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDContent.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDQuestionDetails.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDQuestionAnswered.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":14,"column":3,"nodeType":"95","messageId":"96","endLine":14,"endColumn":7},{"ruleId":"93","severity":1,"message":"97","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":20},{"ruleId":"93","severity":1,"message":"97","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":20},{"ruleId":"93","severity":1,"message":"98","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":25},{"ruleId":"93","severity":1,"message":"97","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":20},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ClipLoader' is defined but never used.","'AnimateOnChange' is defined but never used.","no-global-assign","no-unsafe-negation"]