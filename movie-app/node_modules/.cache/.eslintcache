[{"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\index.js":"1","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\App.js":"2","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\reportWebVitals.js":"3","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GuessActor.js":"4","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestion.js":"5","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAContent.js":"6","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestionAnswered.js":"7","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestionDetails.js":"8","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\Home\\Home.js":"9"},{"size":517,"mtime":1623418120046,"results":"10","hashOfConfig":"11"},{"size":1915,"mtime":1623782096359,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1623418120055,"results":"13","hashOfConfig":"11"},{"size":2628,"mtime":1623782591207,"results":"14","hashOfConfig":"11"},{"size":2677,"mtime":1623761880946,"results":"15","hashOfConfig":"11"},{"size":1758,"mtime":1623762225042,"results":"16","hashOfConfig":"11"},{"size":2444,"mtime":1623783609920,"results":"17","hashOfConfig":"11"},{"size":1558,"mtime":1623767173996,"results":"18","hashOfConfig":"11"},{"size":1436,"mtime":1623783091278,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1n2t8n2",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\index.js",[],["43","44"],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\App.js",["45"],"import React from 'react';\r\n\r\nimport GuessActor from './Components/GuessActor/GuessActor';\r\nimport Home from './Components/Home/Home';\r\n\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"transparent\" variant=\"dark\" expand=\"lg\">\r\n          <Navbar.Toggle />\r\n          <Navbar.Collapse>\r\n              <Nav className=\"justify-content-end\" style={{ width: \"100%\"}}>\r\n                <Nav.Link href=\"/\"><h1 style={{ padding: \"10px\", textAlign: \"left\"}}>Home</h1></Nav.Link>\r\n                <Nav.Link href=\"/guessactor\"><h1 style={{ padding: \"10px\", paddingRight: \"50px\", textAlign: \"left\"}}>GA</h1></Nav.Link>\r\n              </Nav>\r\n          </Navbar.Collapse>\r\n      </Navbar>\r\n\r\n      <div style={{paddingLeft: \"20px\"}}>\r\n        <Router>\r\n            <Switch>\r\n              <Route path=\"/guessactor\">\r\n                <GuessActor />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Home />\r\n              </Route>\r\n            </Switch>\r\n        </Router>\r\n      </div>\r\n    </>\r\n\r\n    /* <div style={{paddingLeft: \"20px\"}}>\r\n      <Router>\r\n        <div>\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/guessactor\">Guess Actor</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n          { A <Switch> looks through its children <Route>s and\r\n              renders the first one that matches the current URL. }\r\n          <Switch>\r\n            <Route path=\"/guessactor\">\r\n              <GuessActor />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>*/\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\reportWebVitals.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GuessActor.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestion.js",["46"],"import React from 'react';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nimport GAContent from './GAContent';\r\n\r\nclass GAQuestion extends React.Component {\r\n    _mounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getQuestion = this.getQuestion.bind(this);\r\n        this.removeQuestion = this.removeQuestion.bind(this);\r\n        this.state = { questionAvailable: false};\r\n    }\r\n\r\n    // getting a question\r\n    async getQuestion() {\r\n        if (this.props.queue.length === 0) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n\r\n        await fetch('http://localhost:5000/getActorAPI').then(res => res.json()).then(data => {\r\n            if (this._mounted === true) {\r\n                this.props.enqueue(data);\r\n                this.setState({ questionAvailable: true });\r\n            }\r\n        }).catch((error) => this.getQuestion());\r\n    }\r\n\r\n    removeQuestion() {\r\n        if (this.props.queue.length === 1) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n        this.props.dequeue();\r\n    }\r\n\r\n    componentDidMount() { // onload of the component\r\n        this._mounted = true;\r\n        this.getQuestion();\r\n        this.getQuestion();\r\n        this.getQuestion();\r\n        return () => this.setState({_mounted: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._mounted = false;\r\n        console.log(this._mounted);\r\n        console.log(\"changed page to home\");\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                {this.state.questionAvailable ? <GAContent \r\n                                                    question={this.props.queue[0]} \r\n                                                    gameOver={this.props.gameOver} \r\n                                                    increaseScore={this.props.increaseScore}\r\n                                                    resetScore={this.props.resetScore}\r\n                                                    removeQuestion={this.removeQuestion} \r\n                                                    newQuestion={this.getQuestion}\r\n                                                    score={this.props.score} /> \r\n                                                    : \r\n                                                    <div class=\"fade-in\">\r\n                                                        <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GAQuestion;","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAContent.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestionAnswered.js",["47"],"import React from 'react';\r\n\r\nimport { AnimateOnChange } from 'react-animation';\r\n\r\nclass GAQuestionAnswered extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nextRound = this.nextRound.bind(this);\r\n        this.resetGame = this.resetGame.bind(this);\r\n        this.contentFadeOut = this.contentFadeOut.bind(this);\r\n    }\r\n\r\n    contentFadeOut() {\r\n        document.getElementById(\"content\").className = \"fade-out\";\r\n        if (this.props.correct === true) {\r\n            this.nextRound();\r\n        }\r\n        if (this.props.correct === false) {\r\n            this.resetGame();\r\n        }\r\n    }\r\n\r\n    nextRound() {\r\n        this.props.removeQuestion();\r\n        this.props.newQuestion();\r\n        this.props.nextQuestion();\r\n    }\r\n\r\n    resetGame() {\r\n        this.props.resetScore();\r\n        this.props.removeQuestion();\r\n        this.props.removeQuestion();\r\n        this.props.removeQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n    }\r\n\r\n    render() {\r\n        if (this.props.correct === true) {\r\n            return(\r\n                <>\r\n                    <div class=\"fade-in\" id=\"content\">\r\n                        <img src={this.props.cover} alt='' style={{maxHeight: \"400px\", paddingBottom: \"10px\"}} class=\"img-fluid\" />\r\n                        <h2>Correct!</h2>\r\n                        <p>Score: {this.props.score}<br/>The answer was: {this.props.answer}.<br/>Click the button below to go to the next question. </p>\r\n                        <input type=\"submit\" value=\"Next Question\" class=\"btn btn-primary\" onClick={this.contentFadeOut} />\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        if (this.props.correct === false) {\r\n            return(\r\n                <>\r\n                    <div class=\"fade-in\" id=\"content\">\r\n                        <img src={this.props.cover} alt='' style={{maxHeight: \"400px\", paddingBottom: \"10px\"}} class=\"img-fluid\" />\r\n                        <h2>Incorrect!<br/>The answer was {this.props.answer}.</h2>\r\n                        <p>Score: {this.props.score}<br/>To play again press the button below.</p>\r\n                        <input type=\"submit\" value=\"Restart\" class=\"btn btn-danger\" onClick={this.contentFadeOut} />\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default GAQuestionAnswered;","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestionDetails.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\Home\\Home.js",["48","49","50","51"],"import React from 'react';\r\n\r\nimport banner from './movie.jpg';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <div className=\"fade-in\">\r\n                    <h1 style={{fontSize: \"72px\"}}>Home</h1>\r\n                    <img src={banner} style={{maxHeight: \"300px\", padding: \"15px\"}} className=\"img-fluid\" />\r\n                    <h3>Movie App</h3>\r\n                    <p>\r\n                        A movie quiz app that uses data from IMDb to create questions.\r\n                        <br/>\r\n                        Want to play?\r\n                        <br/>\r\n                        There are three available modes you can play:\r\n                        <br/><br/>\r\n                        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\r\n                            <tr>\r\n                                <th><a href=\"/guessactor\"><input value=\"Easy\" type=\"submit\" className=\"btn btn-info\"/></a></th>\r\n                                <th><a><input value=\"Medium\" type=\"submit\" className=\"btn btn-info\"/></a></th>\r\n                                <th><a><input value=\"Hard\" type=\"submit\" className=\"btn btn-info\"/></a></th>\r\n                            </tr>\r\n                        </table>\r\n                    </p>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":12,"column":3,"nodeType":"58","messageId":"59","endLine":12,"endColumn":7},{"ruleId":"56","severity":1,"message":"60","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":20},{"ruleId":"56","severity":1,"message":"61","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":25},{"ruleId":"62","severity":1,"message":"63","line":6,"column":5,"nodeType":"64","messageId":"65","endLine":8,"endColumn":6},{"ruleId":"66","severity":1,"message":"67","line":15,"column":21,"nodeType":"68","endLine":15,"endColumn":109},{"ruleId":"69","severity":1,"message":"70","line":27,"column":37,"nodeType":"68","endLine":27,"endColumn":40},{"ruleId":"69","severity":1,"message":"70","line":28,"column":37,"nodeType":"68","endLine":28,"endColumn":40},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ClipLoader' is defined but never used.","'AnimateOnChange' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]