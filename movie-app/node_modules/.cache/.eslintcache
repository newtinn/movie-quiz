[{"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\index.js":"1","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\reportWebVitals.js":"2","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\App.js":"3","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GuessActor.js":"4","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GuessMovie.js":"5","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\Home\\Home.js":"6","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestion.js":"7","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMQuestion.js":"8","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAContent.js":"9","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMContent.js":"10","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestionDetails.js":"11","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestionAnswered.js":"12","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMQuestionDetails.js":"13","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMQuestionAnswered.js":"14","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\sixdegrees.js":"15","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDQuestion.js":"16","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDContent.js":"17","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDQuestionDetails.js":"18","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDQuestionAnswered.js":"19","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\About\\About.js":"20","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\Contact\\Contact.js":"21"},{"size":517,"mtime":1623418120046,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1623418120055,"results":"24","hashOfConfig":"23"},{"size":3969,"mtime":1624719854340,"results":"25","hashOfConfig":"23"},{"size":2674,"mtime":1624719275248,"results":"26","hashOfConfig":"23"},{"size":2752,"mtime":1624715878655,"results":"27","hashOfConfig":"23"},{"size":2737,"mtime":1624284182238,"results":"28","hashOfConfig":"23"},{"size":3448,"mtime":1624719581685,"results":"29","hashOfConfig":"23"},{"size":3604,"mtime":1624719736398,"results":"30","hashOfConfig":"23"},{"size":1814,"mtime":1623853686685,"results":"31","hashOfConfig":"23"},{"size":1819,"mtime":1623859151783,"results":"32","hashOfConfig":"23"},{"size":1362,"mtime":1624188880137,"results":"33","hashOfConfig":"23"},{"size":3219,"mtime":1624188890002,"results":"34","hashOfConfig":"23"},{"size":1691,"mtime":1624188918574,"results":"35","hashOfConfig":"23"},{"size":4018,"mtime":1624188913346,"results":"36","hashOfConfig":"23"},{"size":2563,"mtime":1624719837260,"results":"37","hashOfConfig":"23"},{"size":3533,"mtime":1624719595442,"results":"38","hashOfConfig":"23"},{"size":1820,"mtime":1624125817485,"results":"39","hashOfConfig":"23"},{"size":1537,"mtime":1624188945360,"results":"40","hashOfConfig":"23"},{"size":3219,"mtime":1624188938481,"results":"41","hashOfConfig":"23"},{"size":2445,"mtime":1624278444336,"results":"42","hashOfConfig":"23"},{"size":1217,"mtime":1624188598780,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sebrfk",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\index.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\reportWebVitals.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\App.js",["93"],"import React from 'react';\r\n\r\nimport GuessActor from './Components/GuessActor/GuessActor';\r\nimport Home from './Components/Home/Home';\r\nimport GuessMovie from './Components/GuessMovie/GuessMovie';\r\nimport SixDegrees from './Components/SixDegrees/sixdegrees';\r\nimport About from './Components/About/About';\r\nimport Contact from './Components/Contact/Contact';\r\n\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  let controller = new AbortController();\r\n\r\n  function endFetch() {\r\n    controller.abort();\r\n    controller = new AbortController();\r\n  }\r\n\r\n  /*function resetController() {\r\n    controller = new AbortController();\r\n    console.log(\"reset controller\");\r\n  }*/\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"transparent\" variant=\"dark\" expand=\"lg\">\r\n          <Navbar.Toggle />\r\n          <Navbar.Collapse>\r\n              <Nav className=\"justify-content-end\" style={{ width: \"100%\"}}>\r\n                <Nav.Link href=\"/\" onClick={()=>{endFetch();}} ><h1 style={{ padding: \"10px\", textAlign: \"left\"}}>Home</h1></Nav.Link>\r\n                <Nav.Link href=\"/about\" onClick={()=>{endFetch();}}><h1 style={{ padding: \"10px\", textAlign: \"left\"}}>About</h1></Nav.Link>\r\n                <Nav.Link href=\"/contact\" onClick={()=>{endFetch();}}><h1 style={{ padding: \"10px\", textAlign: \"left\"}}>Contact</h1></Nav.Link>\r\n              </Nav>\r\n          </Navbar.Collapse>\r\n      </Navbar>\r\n\r\n      <div style={{paddingLeft: \"20px\"}}>\r\n        <Router>\r\n            <Switch>\r\n              <Route path=\"/guessactor\" exact>\r\n                <GuessActor controller={controller}/>\r\n              </Route>\r\n              <Route path=\"/guessmovie\" exact>\r\n                <GuessMovie controller={controller}/>\r\n              </Route>\r\n              <Route path=\"/sixdegrees\" exact>\r\n                <SixDegrees controller={controller}/>\r\n              </Route>\r\n              <Route path=\"/about\" exact>\r\n                <About />\r\n              </Route>\r\n              <Route path=\"/contact\" exact>\r\n                <Contact />\r\n              </Route>\r\n              <Route path=\"/\" exact>\r\n                <Home />\r\n              </Route>\r\n              <Route path=\"*\">\r\n                <>\r\n                  <h1 style={{ fontSize: \"72px\"}}>Page not found</h1>\r\n                  <p>Sorry this page could not be found, please use the navigation at the top to locate to a page that exists.</p>\r\n                  <br/>\r\n                  <br/>\r\n                  <br/>\r\n                  <br/>\r\n                </>\r\n              </Route>\r\n            </Switch>\r\n        </Router>\r\n      </div>\r\n      <footer style={{paddingTop: \"200px\", paddingBottom: \"50px\"}}>\r\n        BigFatFilmQuiz is made by Newtinn, Â© 2021\r\n        <a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\"><img alt=\"Creative Commons Licence\" style={{\"border-width\": \"0\"}} src=\"https://i.creativecommons.org/l/by/4.0/88x31.png\" /></a><br />This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">Creative Commons Attribution 4.0 International License</a>.\r\n      </footer>\r\n    </>\r\n\r\n    /* <div style={{paddingLeft: \"20px\"}}>\r\n      <Router>\r\n        <div>\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/guessactor\">Guess Actor</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n          { A <Switch> looks through its children <Route>s and\r\n              renders the first one that matches the current URL. }\r\n          <Switch>\r\n            <Route path=\"/guessactor\">\r\n              <GuessActor />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>*/\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GuessActor.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GuessMovie.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\Home\\Home.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestion.js",["94"],"import React from 'react';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nimport GAContent from './GAContent';\r\n\r\nclass GAQuestion extends React.Component {\r\n    _mounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getQuestion = this.getQuestion.bind(this);\r\n        this.removeQuestion = this.removeQuestion.bind(this);\r\n        this.state = { questionAvailable: false, currentQueue: [] };\r\n    }\r\n\r\n    // getting a question\r\n    async getQuestion() {\r\n        if (this.props.queue.length === 0) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n\r\n        await fetch('https://bigfatmoviequiz.herokuapp.com/getActorAPI', { signal: this.props.controller.signal }).then(res => res.json()).then(data => {\r\n            if (this._mounted === true) {\r\n                var indexCheck = this.state.currentQueue.indexOf(data.actorID);\r\n                if (indexCheck === -1) {\r\n                    var newQueue = this.state.currentQueue;\r\n                    newQueue.push(data.actorID);\r\n                    this.setState({ currentQueue: newQueue} );\r\n                    this.props.enqueue(data);\r\n                    this.setState({ questionAvailable: true });\r\n                } else {\r\n                    this.getQuestion();\r\n                }\r\n            }\r\n        }).catch((error) => {\r\n            if (error.name !== \"AbortError\") {\r\n                this.getQuestion();\r\n            }\r\n        });\r\n    }\r\n\r\n    removeQuestion() {\r\n        if (this.props.queue.length === 1) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n        this.props.dequeue();\r\n    }\r\n\r\n    componentDidMount() { // onload of the component\r\n        \r\n        this._mounted = true;\r\n        if (this.props.queue.length === 0) {\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n        } else {\r\n            this.setState({ questionAvailable: true});\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //this.controller.abort();\r\n        this._mounted = false;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                {this.state.questionAvailable ? <GAContent \r\n                                                    question={this.props.queue[0]} \r\n                                                    gameOver={this.props.gameOver} \r\n                                                    increaseScore={this.props.increaseScore}\r\n                                                    resetScore={this.props.resetScore}\r\n                                                    removeQuestion={this.removeQuestion} \r\n                                                    newQuestion={this.getQuestion}\r\n                                                    score={this.props.score} /> \r\n                                                    : \r\n                                                    <div className=\"contentBox\">\r\n                                                        <div class=\"fade-in\">\r\n                                                            <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GAQuestion;","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMQuestion.js",["95"],"import React from 'react';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nimport GMContent from './GMContent';\r\n\r\nclass GMQuestion extends React.Component {\r\n    _mounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getQuestion = this.getQuestion.bind(this);\r\n        this.removeQuestion = this.removeQuestion.bind(this);\r\n        this.state = { questionAvailable: false, currentQueue: [] };\r\n    }\r\n\r\n    controller = new AbortController();\r\n\r\n    // getting a question\r\n\r\n    async getQuestion() {\r\n        if (this.props.queue.length === 0) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n\r\n        await fetch('https://bigfatmoviequiz.herokuapp.com/getMovieAPI', { signal: this.props.controller.signal }).then(res => res.json()).then(data => {\r\n            if (this._mounted === true) {\r\n                var indexCheck = this.state.currentQueue.indexOf(data.actorID);\r\n\r\n                if (indexCheck === -1) {\r\n                    var newQueue = this.state.currentQueue;\r\n                    newQueue.push([data.actor1ID, data.actor2ID, data.movieID]); // actor1 ID, actor2 ID, movieID\r\n                    this.setState({ currentQueue: newQueue} );\r\n                    this.props.enqueue(data);\r\n                    this.setState({ questionAvailable: true });\r\n                } else {\r\n                    this.getQuestion();\r\n                }\r\n            }\r\n        }).catch((error) => {\r\n            if (error.name !== \"AbortError\") {\r\n                this.getQuestion();\r\n            }\r\n        });\r\n    }\r\n\r\n    removeQuestion() {\r\n        if (this.props.queue.length === 1) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n        this.props.dequeue();\r\n    }\r\n\r\n    componentDidMount() { // onload of the component\r\n        this._mounted = true;\r\n        if (this.props.queue.length === 0) {\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n        } else {\r\n            this.setState({ questionAvailable: true});\r\n        }\r\n        return () => this.setState({_mounted: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.controller.abort();\r\n        this._mounted = false;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                {this.state.questionAvailable ? <GMContent \r\n                                                    question={this.props.queue[0]} \r\n                                                    gameOver={this.props.gameOver} \r\n                                                    increaseScore={this.props.increaseScore}\r\n                                                    resetScore={this.props.resetScore}\r\n                                                    removeQuestion={this.removeQuestion} \r\n                                                    newQuestion={this.getQuestion}\r\n                                                    score={this.props.score} /> \r\n                                                    : \r\n                                                    <div className=\"contentBox\">\r\n                                                        <div class=\"fade-in\">\r\n                                                            <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GMQuestion;","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAContent.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMContent.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestionDetails.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessActor\\GAComponents\\GAQuestionAnswered.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMQuestionDetails.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\GuessMovie\\GMComponents\\GMQuestionAnswered.js",["96"],"import React from 'react';\r\n\r\nimport { AnimateOnChange, HideUntilLoaded } from 'react-animation';\r\n\r\nclass GMQuestionAnswered extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nextRound = this.nextRound.bind(this);\r\n        this.resetGame = this.resetGame.bind(this);\r\n        this.contentFadeOut = this.contentFadeOut.bind(this);\r\n    }\r\n\r\n    contentFadeOut() {\r\n        document.getElementById(\"content\").className = \"fade-out\";\r\n        if (this.props.correct === true) {\r\n            this.nextRound();\r\n        }\r\n        if (this.props.correct === false) {\r\n            this.resetGame();\r\n        }\r\n    }\r\n\r\n    nextRound() {\r\n        this.props.removeQuestion();\r\n        this.props.newQuestion();\r\n        this.props.nextQuestion();\r\n    }\r\n\r\n    resetGame() {\r\n        this.props.resetScore();\r\n        this.props.removeQuestion();\r\n        this.props.nextQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        /*this.props.removeQuestion();\r\n        this.props.removeQuestion();\r\n        this.props.removeQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();\r\n        this.props.newQuestion();*/\r\n    }\r\n\r\n    render() {\r\n        if (this.props.correct === true) {\r\n            return(\r\n                <>\r\n                    <HideUntilLoaded animationIn=\"fadeInUp\" imageToLoad={this.props.cover} durationIn=\"1000\" Spinner={()=> \r\n                                                            \r\n                                                            <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                            </div>\r\n                                                        \r\n                                                            }>\r\n                        <div class=\"fade-in\" id=\"content\">\r\n                            <img src={this.props.cover} alt='' style={{maxHeight: \"400px\", paddingBottom: \"10px\"}} class=\"img-fluid\" />\r\n                            <h2>Correct!</h2>\r\n                            <h2 style={{color: \"#27FB6B\"}}>Score: {this.props.score}</h2>\r\n                            <p>The answer was: {this.props.answer}.<br/>Click the button below to go to the next question. </p>\r\n                            <input type=\"submit\" value=\"Next Question\" class=\"btn btn-primary\" onClick={this.contentFadeOut} />\r\n                            <p style={{paddingBottom: \"150px\"}}></p>\r\n                        </div>\r\n                    </HideUntilLoaded>\r\n                </>\r\n            );\r\n        }\r\n        if (this.props.correct === false) {\r\n            return(\r\n                <>\r\n                    <HideUntilLoaded animationIn=\"fadeInUp\" imageToLoad={this.props.cover} durationIn=\"1000\" Spinner={()=> \r\n                                                            \r\n                                                            <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                            </div>\r\n                                                        \r\n                                                            }>\r\n                        <div class=\"fade-in\" id=\"content\">\r\n                            <img src={this.props.cover} alt='' style={{maxHeight: \"400px\", paddingBottom: \"10px\"}} class=\"img-fluid\" />\r\n                            <h2>Incorrect!<br/>The answer was {this.props.answer}.</h2>\r\n                            <h2 style={{color: \"#FF5A5F\"}}>Score: {this.props.score}</h2>\r\n                            <p>To play again press the button below.</p>\r\n                            <input type=\"submit\" value=\"Restart\" class=\"btn btn-danger\" onClick={this.contentFadeOut} />\r\n                            <p style={{paddingBottom: \"150px\"}}></p>\r\n                        </div>\r\n                    </HideUntilLoaded>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default GMQuestionAnswered;","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\sixdegrees.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDQuestion.js",["97"],"import React from 'react';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nimport SDContent from './SDContent';\r\n\r\nclass SDQuestion extends React.Component {\r\n    _mounted = false;\r\n    controller = new AbortController();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getQuestion = this.getQuestion.bind(this);\r\n        this.removeQuestion = this.removeQuestion.bind(this);\r\n        this.state = { questionAvailable: false, currentQueue: [] };\r\n    }\r\n\r\n    // getting a question\r\n    async getQuestion() {\r\n        if (this.props.queue.length === 0) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n\r\n        await fetch('https://bigfatmoviequiz.herokuapp.com/sixdegreesAPI', { signal: this.props.controller.signal }).then(res => res.json()).then(data => {\r\n            if (this._mounted === true) {\r\n                var indexCheck = this.state.currentQueue.indexOf(data.answer);\r\n                if (indexCheck === -1) {\r\n                    var newQueue = this.state.currentQueue;\r\n                    newQueue.push(data.answer);\r\n                    this.setState({ currentQueue: newQueue} );\r\n                    this.props.enqueue(data);\r\n                    this.setState({ questionAvailable: true });\r\n                } else {\r\n                    this.getQuestion();\r\n                }\r\n            }\r\n        }).catch((error) => {\r\n            if (error.name !== \"AbortError\") {\r\n                this.getQuestion();\r\n            }\r\n        });\r\n    }\r\n\r\n    removeQuestion() {\r\n        if (this.props.queue.length === 1) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n        this.props.dequeue();\r\n    }\r\n\r\n    componentDidMount() { // onload of the component\r\n        this._mounted = true;\r\n        if (this.props.queue.length === 0) {\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n        } else {\r\n            this.setState({ questionAvailable: true});\r\n        }\r\n        return () => this.setState({_mounted: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.controller.abort();\r\n        this._mounted = false;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                {this.state.questionAvailable ? <SDContent \r\n                                                    question={this.props.queue[0]} \r\n                                                    gameOver={this.props.gameOver} \r\n                                                    increaseScore={this.props.increaseScore}\r\n                                                    resetScore={this.props.resetScore}\r\n                                                    removeQuestion={this.removeQuestion} \r\n                                                    newQuestion={this.getQuestion}\r\n                                                    score={this.props.score} /> \r\n                                                    : \r\n                                                    <div className=\"contentBox\">\r\n                                                        <div class=\"fade-in\">\r\n                                                            <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SDQuestion;","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDContent.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDQuestionDetails.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\SixDegrees\\SDComponents\\SDQuestionAnswered.js",[],"C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\About\\About.js",["98"],"import React from 'react';\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return(\r\n            <>\r\n                <h1 style={{fontSize: \"72px\"}}>About</h1>\r\n                <p>\r\n                    Welcome to the about page!\r\n                    <br/>\r\n                    <br/>\r\n                    The Big Fat Film Quiz is a website that is about testing your knowledge on films.\r\n                    <br/>\r\n                    To really test your knowledge there are three gamemodes. From easy to hard, there are questions for everyone!\r\n                    <br/>\r\n                    <br/>\r\n                </p>\r\n                <p style={{fontSize: \"10px\"}}>\r\n                Copyright Information:<br/>\r\n                I must state that in NO way, shape or form am I intending to infringe rights of the copyright holder.<br/>Content used is strictly for research/reviewing purposes and to help educate. All under the Fair Use law.\r\n                <br/>\"Copyright Disclaimer Under Section 107 of the Copyright Act 1976, allowance is made for \"fair use\" for purposes such as <br/>\r\n                criticism, comment, news reporting, teaching, scholarship, and research. Fair use is a use permitted by copyright statute that might otherwise be infringing.<br/>Non-profit, educational or personal use tips the balance in favor of fair use.\"\r\n                <br/>All these rights are owned by IMDb and I do not intend to infringe these rights.\r\n                </p>\r\n                <h2>About the creator</h2>\r\n                <p>\r\n                    Hey! My name's Newtinn and I created this app. This is my first website that I have created and put online.\r\n                    <br/>\r\n                    Before this website, I have mostly created games in Unity and GameMaker: Studio.\r\n                    <br/>If you want to check those out check out my itch.io here:\r\n                    <br/><a href=\"https://newtinn.itch.io/\" target=\"_blank\"><input value=\"itch.io\" type=\"submit\" className=\"btn btn-info\" /></a>\r\n                    <br/>\r\n                    <br/>\r\n                    Some of my interests include:\r\n                    <br/>â¢ Gaming\r\n                    <br/>â¢ Listening to lofi\r\n                    <br/>â¢ Watching sports\r\n                    <br/><br/>If you want to contact me go to the contact page!\r\n                </p>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","C:\\Users\\Matt\\Desktop\\movie-quiz-new\\movie-quiz\\movie-app\\src\\Components\\Contact\\Contact.js",["99","100"],"import React from 'react';\r\n\r\nclass Contact extends React.Component {\r\n    render() {\r\n        return(\r\n            <>\r\n                <h1 style={{fontSize: \"72px\"}}>Contact</h1>\r\n                <p>\r\n                    Welcome to the contact page!\r\n                    <br/>\r\n                    If you want to send an inquiry about the quiz or just want to say hi to the creator, you have come to the right place!\r\n                    <br/>\r\n                    Contact details:\r\n                    <br/>\r\n                    <br/>\r\n                    Email: newtinn@hotmail.com\r\n                    <br/>\r\n                    Twitter: @newtinn - <a href=\"https://www.twitter.com/@newtinn\" target=\"_blank\"><input type=\"submit\" value=\"Twitter\" className=\"btn btn-info\" /></a><br/>\r\n                    Youtube: newtinn - <a href=\"https://www.youtube.com/channel/UCo48YTr8_mMz_U8GOzmV_bg\" target=\"_blank\"><input type=\"submit\" value=\"Youtube\" className=\"btn btn-danger\" /></a>\r\n                </p>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <p style={{paddingBottom: \"150px\"}}></p>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;",{"ruleId":"101","severity":1,"message":"102","line":16,"column":3,"nodeType":"103","messageId":"104","endLine":16,"endColumn":7},{"ruleId":"101","severity":1,"message":"105","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":20},{"ruleId":"101","severity":1,"message":"105","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":20},{"ruleId":"101","severity":1,"message":"106","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":25},{"ruleId":"101","severity":1,"message":"105","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":20},{"ruleId":"107","severity":1,"message":"108","line":31,"column":26,"nodeType":"109","endLine":31,"endColumn":77},{"ruleId":"107","severity":1,"message":"108","line":18,"column":41,"nodeType":"109","endLine":18,"endColumn":100},{"ruleId":"107","severity":1,"message":"108","line":19,"column":40,"nodeType":"109","endLine":19,"endColumn":123},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ClipLoader' is defined but never used.","'AnimateOnChange' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement"]