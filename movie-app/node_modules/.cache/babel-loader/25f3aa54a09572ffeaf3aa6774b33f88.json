{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Matt/Desktop/movie-quiz-new/movie-quiz/movie-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Matt/Desktop/movie-quiz-new/movie-quiz/movie-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/Users/Matt/Desktop/movie-quiz-new/movie-quiz/movie-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Matt/Desktop/movie-quiz-new/movie-quiz/movie-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/Matt/Desktop/movie-quiz-new/movie-quiz/movie-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/Matt/Desktop/movie-quiz-new/movie-quiz/movie-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Matt/Desktop/movie-quiz-new/movie-quiz/movie-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{ClipLoader}from'react-spinners';import GAContent from'./GAContent';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var GAQuestion=/*#__PURE__*/function(_React$Component){_inherits(GAQuestion,_React$Component);var _super=_createSuper(GAQuestion);function GAQuestion(props){var _this;_classCallCheck(this,GAQuestion);_this=_super.call(this,props);_this._mounted=false;_this.getQuestion=_this.getQuestion.bind(_assertThisInitialized(_this));_this.removeQuestion=_this.removeQuestion.bind(_assertThisInitialized(_this));_this.state={questionAvailable:false,currentQueue:[]};return _this;}// getting a question\n_createClass(GAQuestion,[{key:\"getQuestion\",value:function(){var _getQuestion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this2=this;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(this.props.queue.length===0){this.setState({questionAvailable:false});}_context.next=3;return fetch('https://bigfatmoviequiz.herokuapp.com/getActorAPI').then(function(res){return res.json();}).then(function(data){if(_this2._mounted===true){var indexCheck=_this2.state.currentQueue.indexOf(data.actorID);if(indexCheck===-1){var newQueue=_this2.state.currentQueue;newQueue.push(data.actorID);_this2.setState({currentQueue:newQueue});_this2.props.enqueue(data);_this2.setState({questionAvailable:true});}else{_this2.getQuestion();}}}).catch(function(error){return _this2.getQuestion();});case 3:case\"end\":return _context.stop();}}},_callee,this);}));function getQuestion(){return _getQuestion.apply(this,arguments);}return getQuestion;}()},{key:\"removeQuestion\",value:function removeQuestion(){if(this.props.queue.length===1){this.setState({questionAvailable:false});}this.props.dequeue();}},{key:\"componentDidMount\",value:function componentDidMount(){var _this3=this;// onload of the component\nthis._mounted=true;if(this.props.queue.length===0){this.getQuestion();this.getQuestion();this.getQuestion();}else{this.setState({questionAvailable:true});}return function(){return _this3.setState({_mounted:false});};}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._mounted=false;console.log(this._mounted);console.log(\"changed page to home\");}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(_Fragment,{children:this.state.questionAvailable?/*#__PURE__*/_jsx(GAContent,{question:this.props.queue[0],gameOver:this.props.gameOver,increaseScore:this.props.increaseScore,resetScore:this.props.resetScore,removeQuestion:this.removeQuestion,newQuestion:this.getQuestion,score:this.props.score}):/*#__PURE__*/_jsx(\"div\",{class:\"fade-in\",children:/*#__PURE__*/_jsx(\"div\",{class:\"spinner-border text-light\",role:\"status\"})})});}}]);return GAQuestion;}(React.Component);export default GAQuestion;","map":{"version":3,"sources":["C:/Users/Matt/Desktop/movie-quiz-new/movie-quiz/movie-app/src/Components/GuessActor/GAComponents/GAQuestion.js"],"names":["React","ClipLoader","GAContent","GAQuestion","props","_mounted","getQuestion","bind","removeQuestion","state","questionAvailable","currentQueue","queue","length","setState","fetch","then","res","json","data","indexCheck","indexOf","actorID","newQueue","push","enqueue","catch","error","dequeue","console","log","gameOver","increaseScore","resetScore","score","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nimport GAContent from './GAContent';\r\n\r\nclass GAQuestion extends React.Component {\r\n    _mounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getQuestion = this.getQuestion.bind(this);\r\n        this.removeQuestion = this.removeQuestion.bind(this);\r\n        this.state = { questionAvailable: false, currentQueue: [] };\r\n    }\r\n\r\n    // getting a question\r\n    async getQuestion() {\r\n        if (this.props.queue.length === 0) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n\r\n        await fetch('https://bigfatmoviequiz.herokuapp.com/getActorAPI').then(res => res.json()).then(data => {\r\n            if (this._mounted === true) {\r\n                var indexCheck = this.state.currentQueue.indexOf(data.actorID);\r\n                if (indexCheck === -1) {\r\n                    var newQueue = this.state.currentQueue;\r\n                    newQueue.push(data.actorID);\r\n                    this.setState({ currentQueue: newQueue} );\r\n                    this.props.enqueue(data);\r\n                    this.setState({ questionAvailable: true });\r\n                } else {\r\n                    this.getQuestion();\r\n                }\r\n            }\r\n        }).catch((error) => this.getQuestion());\r\n    }\r\n\r\n    removeQuestion() {\r\n        if (this.props.queue.length === 1) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n        this.props.dequeue();\r\n    }\r\n\r\n    componentDidMount() { // onload of the component\r\n        this._mounted = true;\r\n        if (this.props.queue.length === 0) {\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n            this.getQuestion();\r\n        } else {\r\n            this.setState({ questionAvailable: true});\r\n        }\r\n        return () => this.setState({_mounted: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._mounted = false;\r\n        console.log(this._mounted);\r\n        console.log(\"changed page to home\");\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                {this.state.questionAvailable ? <GAContent \r\n                                                    question={this.props.queue[0]} \r\n                                                    gameOver={this.props.gameOver} \r\n                                                    increaseScore={this.props.increaseScore}\r\n                                                    resetScore={this.props.resetScore}\r\n                                                    removeQuestion={this.removeQuestion} \r\n                                                    newQuestion={this.getQuestion}\r\n                                                    score={this.props.score} /> \r\n                                                    : \r\n                                                    <div class=\"fade-in\">\r\n                                                        <div class=\"spinner-border text-light\" role=\"status\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GAQuestion;"]},"metadata":{},"sourceType":"module"}