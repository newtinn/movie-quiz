{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Desktop\\\\movie-quiz-new\\\\movie-quiz\\\\movie-app\\\\src\\\\Components\\\\GuessActor\\\\GAComponents\\\\GAQuestion.js\";\nimport React from 'react';\nimport GAContent from './GAContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass GAQuestion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getQuestion = this.getQuestion.bind(this);\n    this.removeQuestion = this.removeQuestion.bind(this);\n    this.state = {\n      questionAvailable: false\n    };\n  } // getting a question\n\n\n  getQuestion() {\n    fetch('http://localhost:5000/getActorAPI').then(res => res.json()).then(data => {\n      this.props.enqueue(data);\n      this.setState({\n        questionAvailable: true\n      });\n    }).catch(error => this.getQuestion());\n  }\n\n  removeQuestion() {\n    if (this.props.queue.length === 1) {\n      this.setState({\n        questionAvailable: false\n      });\n    }\n\n    this.props.dequeue();\n  }\n\n  componentDidMount() {\n    // onload of the component\n    this.getQuestion();\n    this.getQuestion();\n    this.getQuestion();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", this.props.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getQuestion,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.removeQuestion,\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), this.state.questionAvailable ? /*#__PURE__*/_jsxDEV(GAContent, {\n        question: this.props.queue[0],\n        gameOver: this.props.gameOver,\n        score: this.props.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 49\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 152\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default GAQuestion;","map":{"version":3,"sources":["C:/Users/Matt/Desktop/movie-quiz-new/movie-quiz/movie-app/src/Components/GuessActor/GAComponents/GAQuestion.js"],"names":["React","GAContent","GAQuestion","Component","constructor","props","getQuestion","bind","removeQuestion","state","questionAvailable","fetch","then","res","json","data","enqueue","setState","catch","error","queue","length","dequeue","componentDidMount","render","score","gameOver"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,KAAL,GAAa;AAAEC,MAAAA,iBAAiB,EAAE;AAArB,KAAb;AACH,GANoC,CAQrC;;;AACAJ,EAAAA,WAAW,GAAG;AACVK,IAAAA,KAAK,CAAC,mCAAD,CAAL,CAA2CC,IAA3C,CAAgDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvD,EAAmEF,IAAnE,CAAwEG,IAAI,IAAI;AAC5E,WAAKV,KAAL,CAAWW,OAAX,CAAmBD,IAAnB;AACA,WAAKE,QAAL,CAAc;AAAEP,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACH,KAHD,EAGGQ,KAHH,CAGUC,KAAD,IAAW,KAAKb,WAAL,EAHpB;AAIH;;AAEDE,EAAAA,cAAc,GAAG;AACb,QAAI,KAAKH,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,KAA4B,CAAhC,EAAmC;AAC/B,WAAKJ,QAAL,CAAc;AAAEP,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACH;;AACD,SAAKL,KAAL,CAAWiB,OAAX;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAAE;AAClB,SAAKjB,WAAL;AACA,SAAKA,WAAL;AACA,SAAKA,WAAL;AACH;;AAEDkB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,8BAAW,KAAKnB,KAAL,CAAWoB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKnB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKE,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKK,KAAKC,KAAL,CAAWC,iBAAX,gBAA+B,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWe,KAAX,CAAiB,CAAjB,CAArB;AAA0C,QAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWqB,QAA/D;AAAyE,QAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWoB;AAA3F;AAAA;AAAA;AAAA;AAAA,cAA/B,gBAAsI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAL3I;AAAA,oBADJ;AASH;;AAvCoC;;AA0CzC,eAAevB,UAAf","sourcesContent":["import React from 'react';\r\n\r\nimport GAContent from './GAContent';\r\n\r\nclass GAQuestion extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getQuestion = this.getQuestion.bind(this);\r\n        this.removeQuestion = this.removeQuestion.bind(this);\r\n        this.state = { questionAvailable: false };\r\n    }\r\n\r\n    // getting a question\r\n    getQuestion() {\r\n        fetch('http://localhost:5000/getActorAPI').then(res => res.json()).then(data => {\r\n            this.props.enqueue(data);\r\n            this.setState({ questionAvailable: true });\r\n        }).catch((error) => this.getQuestion());\r\n    }\r\n\r\n    removeQuestion() {\r\n        if (this.props.queue.length === 1) {\r\n            this.setState({ questionAvailable: false});\r\n        }\r\n        this.props.dequeue();\r\n    }\r\n\r\n    componentDidMount() { // onload of the component\r\n        this.getQuestion();\r\n        this.getQuestion();\r\n        this.getQuestion();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <p>Score: {this.props.score}</p>\r\n                <button onClick={this.getQuestion}>Add</button>\r\n                <button onClick={this.removeQuestion}>Remove</button>\r\n                <br/>\r\n                {this.state.questionAvailable ? <GAContent question={this.props.queue[0]} gameOver={this.props.gameOver} score={this.props.score} /> : <p>Loading...</p>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GAQuestion;"]},"metadata":{},"sourceType":"module"}