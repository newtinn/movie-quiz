{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Desktop\\\\movie-quiz-new\\\\movie-quiz\\\\movie-app\\\\src\\\\Components\\\\GuessActor\\\\GuessActor.js\";\nimport React from 'react';\nimport GAQuestion from './GAComponents/GAQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GuessActor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      queue: [],\n      queueMaxSize: 3,\n      question: null,\n      score: 0,\n      gameOver: false\n    };\n    this.enqueue = this.enqueue.bind(this);\n    this.dequeue = this.dequeue.bind(this);\n    this.checkFull = this.checkFull.bind(this);\n    this.checkEmpty = this.checkEmpty.bind(this);\n    this.increaseScore = this.increaseScore.bind(this);\n    this.resetScore = this.resetScore.bind(this);\n  } // queue functions\n\n\n  enqueue(questionToAdd) {\n    if (this.checkFull() === false) {\n      var currentQueue = this.state.queue;\n      currentQueue.push(questionToAdd);\n      this.setState({\n        queue: currentQueue\n      }); //console.log(this.state.queue);\n    }\n  }\n\n  dequeue() {\n    if (this.checkEmpty() === false) {\n      var currentQueue = this.state.queue;\n      currentQueue.shift();\n      this.setState({\n        queue: currentQueue\n      }); //console.log(this.state.queue);\n    }\n  }\n\n  checkEmpty() {\n    if (this.state.queue.length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  checkFull() {\n    if (this.state.queue.length === this.state.queueMaxSize) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  increaseScore() {\n    var currentScore = this.state.score;\n    currentScore += 1;\n    this.setState({\n      score: currentScore\n    });\n  }\n\n  resetScore() {\n    var currentScore = this.state.score;\n    currentScore = 0;\n    this.setState({\n      score: currentScore,\n      gameOver: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fade-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Easy mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Guess the actor/actress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GAQuestion, {\n        enqueue: this.enqueue,\n        dequeue: this.dequeue,\n        checkEmpty: this.checkEmpty,\n        checkFull: this.checkFull,\n        queue: this.state.queue,\n        queueMaxSize: this.state.queueMaxSize,\n        gameOver: this.state.gameOver,\n        increaseScore: this.increaseScore,\n        resetScore: this.resetScore,\n        score: this.state.score,\n        controller: this.props.controller\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GuessActor;","map":{"version":3,"sources":["C:/Users/Matt/Desktop/movie-quiz-new/movie-quiz/movie-app/src/Components/GuessActor/GuessActor.js"],"names":["React","GAQuestion","GuessActor","Component","constructor","props","state","queue","queueMaxSize","question","score","gameOver","enqueue","bind","dequeue","checkFull","checkEmpty","increaseScore","resetScore","questionToAdd","currentQueue","push","setState","shift","length","currentScore","render","controller"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport GAQuestion from './GAComponents/GAQuestion';\r\n\r\nclass GuessActor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { queue: [] , queueMaxSize: 3, question: null, score: 0, gameOver: false };\r\n        this.enqueue = this.enqueue.bind(this);\r\n        this.dequeue = this.dequeue.bind(this);\r\n        this.checkFull = this.checkFull.bind(this);\r\n        this.checkEmpty = this.checkEmpty.bind(this);\r\n        this.increaseScore = this.increaseScore.bind(this);\r\n        this.resetScore = this.resetScore.bind(this);\r\n    }\r\n\r\n    // queue functions\r\n    enqueue(questionToAdd) {\r\n        if (this.checkFull() === false) {\r\n            var currentQueue = this.state.queue;\r\n            currentQueue.push(questionToAdd);\r\n            this.setState({ queue: currentQueue });\r\n            //console.log(this.state.queue);\r\n        }\r\n    }\r\n    dequeue() {\r\n        if (this.checkEmpty() === false) {\r\n            var currentQueue = this.state.queue;\r\n            currentQueue.shift();\r\n            this.setState({ queue: currentQueue });\r\n            //console.log(this.state.queue);\r\n        }\r\n    }\r\n    checkEmpty() {\r\n        if (this.state.queue.length === 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    checkFull() {\r\n        if (this.state.queue.length === this.state.queueMaxSize) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    increaseScore() {\r\n        var currentScore = this.state.score;\r\n        currentScore += 1;\r\n        this.setState({ score: currentScore});\r\n    }\r\n\r\n    resetScore() {\r\n        var currentScore = this.state.score;\r\n        currentScore = 0;\r\n        this.setState({ score: currentScore, gameOver: false});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"fade-in\">\r\n                <h1>Easy mode</h1>\r\n                <p>Guess the actor/actress</p>\r\n                <GAQuestion \r\n                    enqueue={this.enqueue} \r\n                    dequeue={this.dequeue} \r\n                    checkEmpty={this.checkEmpty} \r\n                    checkFull={this.checkFull} \r\n                    queue={this.state.queue} \r\n                    queueMaxSize={this.state.queueMaxSize}\r\n                    gameOver={this.state.gameOver} \r\n                    increaseScore={this.increaseScore}\r\n                    resetScore={this.resetScore}\r\n                    score={this.state.score} \r\n                    controller={this.props.controller} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuessActor;"]},"metadata":{},"sourceType":"module"}