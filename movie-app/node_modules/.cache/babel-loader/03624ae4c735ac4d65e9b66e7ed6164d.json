{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Desktop\\\\movie-quiz-new\\\\movie-quiz\\\\movie-app\\\\src\\\\Components\\\\GuessActor\\\\GuessActor.js\";\nimport React from 'react';\nimport GAQuestion from './GAComponents/GAQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GuessActor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      queue: [],\n      queueMaxSize: 3,\n      question: null,\n      score: 0,\n      gameOver: false\n    };\n    this.enqueue = this.enqueue.bind(this);\n    this.dequeue = this.dequeue.bind(this);\n    this.checkFull = this.checkFull.bind(this);\n    this.checkEmpty = this.checkEmpty.bind(this);\n  } // queue functions\n\n\n  enqueue(questionToAdd) {\n    if (this.checkFull() === false) {\n      var currentQueue = this.state.queue;\n      currentQueue.push(questionToAdd);\n      this.setState({\n        queue: currentQueue\n      });\n      console.log(this.state.queue);\n    } else {\n      console.log(\"queue is full!\");\n    }\n  }\n\n  dequeue() {\n    if (this.checkEmpty() === false) {\n      var currentQueue = this.state.queue;\n      currentQueue.shift();\n      this.setState({\n        queue: currentQueue\n      });\n      console.log(this.state.queue);\n    }\n  }\n\n  checkEmpty() {\n    if (this.state.queue.length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  checkFull() {\n    if (this.state.queue.length === this.state.queueMaxSize) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Guess Actor page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GAQuestion, {\n        enqueue: this.enqueue,\n        dequeue: this.dequeue,\n        checkEmpty: this.checkEmpty,\n        checkFull: this.checkFull,\n        queue: this.state.queue,\n        gameOver: this.state.gameOver,\n        score: this.state.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GuessActor;","map":{"version":3,"sources":["C:/Users/Matt/Desktop/movie-quiz-new/movie-quiz/movie-app/src/Components/GuessActor/GuessActor.js"],"names":["React","GAQuestion","GuessActor","Component","constructor","props","state","queue","queueMaxSize","question","score","gameOver","enqueue","bind","dequeue","checkFull","checkEmpty","questionToAdd","currentQueue","push","setState","console","log","shift","length","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAcC,MAAAA,YAAY,EAAE,CAA5B;AAA+BC,MAAAA,QAAQ,EAAE,IAAzC;AAA+CC,MAAAA,KAAK,EAAE,CAAtD;AAAyDC,MAAAA,QAAQ,EAAE;AAAnE,KAAb;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAlB;AACH,GARoC,CAUrC;;;AACAD,EAAAA,OAAO,CAACK,aAAD,EAAgB;AACnB,QAAI,KAAKF,SAAL,OAAqB,KAAzB,EAAgC;AAC5B,UAAIG,YAAY,GAAG,KAAKZ,KAAL,CAAWC,KAA9B;AACAW,MAAAA,YAAY,CAACC,IAAb,CAAkBF,aAAlB;AACA,WAAKG,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAAEW;AAAT,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWC,KAAvB;AACH,KALD,MAKO;AACHc,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ;;AACDR,EAAAA,OAAO,GAAG;AACN,QAAI,KAAKE,UAAL,OAAsB,KAA1B,EAAiC;AAC7B,UAAIE,YAAY,GAAG,KAAKZ,KAAL,CAAWC,KAA9B;AACAW,MAAAA,YAAY,CAACK,KAAb;AACA,WAAKH,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAAEW;AAAT,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWC,KAAvB;AACH;AACJ;;AACDS,EAAAA,UAAU,GAAG;AACT,QAAI,KAAKV,KAAL,CAAWC,KAAX,CAAiBiB,MAAjB,KAA4B,CAAhC,EAAmC;AAC/B,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ;;AACDT,EAAAA,SAAS,GAAG;AACR,QAAI,KAAKT,KAAL,CAAWC,KAAX,CAAiBiB,MAAjB,KAA4B,KAAKlB,KAAL,CAAWE,YAA3C,EAAyD;AACrD,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ;;AAGDiB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAKb,OAA1B;AAAmC,QAAA,OAAO,EAAE,KAAKE,OAAjD;AAA0D,QAAA,UAAU,EAAE,KAAKE,UAA3E;AAAuF,QAAA,SAAS,EAAE,KAAKD,SAAvG;AAAkH,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,KAApI;AAA2I,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWK,QAAhK;AAA0K,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWI;AAA5L;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AApDoC;;AAuDzC,eAAeR,UAAf","sourcesContent":["import React from 'react';\r\n\r\nimport GAQuestion from './GAComponents/GAQuestion';\r\n\r\nclass GuessActor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { queue: [] , queueMaxSize: 3, question: null, score: 0, gameOver: false };\r\n        this.enqueue = this.enqueue.bind(this);\r\n        this.dequeue = this.dequeue.bind(this);\r\n        this.checkFull = this.checkFull.bind(this);\r\n        this.checkEmpty = this.checkEmpty.bind(this);\r\n    }\r\n\r\n    // queue functions\r\n    enqueue(questionToAdd) {\r\n        if (this.checkFull() === false) {\r\n            var currentQueue = this.state.queue;\r\n            currentQueue.push(questionToAdd);\r\n            this.setState({ queue: currentQueue });\r\n            console.log(this.state.queue);\r\n        } else {\r\n            console.log(\"queue is full!\");\r\n        }\r\n    }\r\n    dequeue() {\r\n        if (this.checkEmpty() === false) {\r\n            var currentQueue = this.state.queue;\r\n            currentQueue.shift();\r\n            this.setState({ queue: currentQueue });\r\n            console.log(this.state.queue);\r\n        }\r\n    }\r\n    checkEmpty() {\r\n        if (this.state.queue.length === 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    checkFull() {\r\n        if (this.state.queue.length === this.state.queueMaxSize) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>Guess Actor page</h1>\r\n                <GAQuestion enqueue={this.enqueue} dequeue={this.dequeue} checkEmpty={this.checkEmpty} checkFull={this.checkFull} queue={this.state.queue} gameOver={this.state.gameOver} score={this.state.score}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuessActor;"]},"metadata":{},"sourceType":"module"}